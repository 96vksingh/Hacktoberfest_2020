#include<bits/stdc++.h>
#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;
using namespace std;

bool isPossible(int arr[], int n, int m, int mid)
{
    int count = 1;
    int curr_sum = 0;
    for (int i = 0; i < n; i++)
    {
        if (arr[i] > mid)
            return false;
        if (curr_sum + arr[i] > mid)
        {
            count++;
            curr_sum = arr[i];
            if (count > m)
                return false;
        }
        else
            curr_sum += arr[i];
    }
    return true;
}
int findPages(int arr[], int n, int m,int sum)
{
    if (n < m)
        return -1;
    int start = 0, end = sum;
    int result = INT_MAX;
    while (start <= end)
    {
        int mid = start+ (end-start)/2;
        if (isPossible(arr, n, m, mid))
        {
            result = min(result, mid);
            end = mid - 1;
        }

        else
            start = mid + 1;
    }

    return result;
}
int main() {
    long long t;
    cin>>t;
    while(t--)
    {
        int x,n,i,sum=0;
        cin>>x>>n;
        int a[n];
        for(i=0;i<n;i++)
        {
            cin>>a[i];
            sum+=a[i];
        }
        cout<< findPages(a, n, x,sum) << endl;
    }
    return 0;
}
